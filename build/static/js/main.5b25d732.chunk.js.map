{"version":3,"sources":["components/Main/main.js","components/SingleView/single.js","components/Navbar/navbar.js","components/InfoView/info.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["Option","Select","Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","institutions","componentWillMount","asyncToGenerator","regenerator_default","a","mark","_callee","mreq","mres","wrap","_context","prev","next","fetch","sent","json","setState","regions","stop","renderInstitutions","_callee2","_context2","concat","region","render","onSearch","_ref3","_callee3","e","query","_context3","split","join","console","log","_x","apply","arguments","term","searchHandler","bind","assertThisInitialized","event","target","value","_this2","react_default","createElement","className","input","placeholder","onChange","size","filter","x","short_name","toLowerCase","includes","map","one","Link","to","pathname","id","Search","es_select","showSearch","style","width","name","es_button","type","onClick","Component","SingleView","institution","match","params","drugs","available_drugs","list","full_name","address","code","drug","trade_name","com_name","date","storage","count","Navbar","InfoView","data","ireq","ires","index","key","doctor","Router","BrowserRouter","Navbar_navbar","Switch","Route","path","component","exact","App","components_Router","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b25d732.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './main.css';\r\nimport { Input, Button, Select } from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport 'antd/lib/input/style/css';\r\nimport 'antd/lib/select/style/css'; \r\nimport 'antd/lib/button/style/css'; \r\nconst Option = Select.Option;\r\n\r\nfunction searchingFor(term){\r\n  return function(x){\r\n    return x.short_name.toLowerCase().includes(term.toLowerCase()) || !term;\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n\t\tstate = {\r\n\t\t\tinstitutions: []\r\n\t\t}\r\n\r\n\t  constructor(props){\r\n\t    super(props);\r\n\t    this.state = {\r\n\t      regions: [],\r\n\t      institutions: [],\r\n\t      render: false,\r\n\t      term:''\r\n\t    }\r\n\t    this.searchHandler = this.searchHandler.bind(this);\r\n\t  }\r\n\r\n\t  componentWillMount = async () => {\r\n\t    const mreq = await fetch(`http://46.101.236.211:6969/api/v1/regions`);\r\n\t    const mres = await mreq.json();\r\n\t    this.setState({ regions: mres });\r\n\t  }\r\n\r\n\t  renderInstitutions = async () => {\r\n\t  \tconst mreq = await fetch(`http://46.101.236.211:6969/api/v1/institutions?region=${this.state.region}`);\r\n\t    const mres = await mreq.json();\r\n\t    await this.setState({institutions: mres});\r\n\t    this.setState({render: true});\r\n\t  }\r\n\r\n\t  onSearch = async (e) => {\r\n\t  \tlet term = e;\r\n\t  \tlet query = term.split(' ').join('%20');\r\n\t  \tconsole.log(`http://46.101.236.211:6969/api/v1/institutions/?search=${query}`);\r\n\t  \tconst mreq = await fetch(`http://46.101.236.211:6969/api/v1/institutions/?search=${query}`);\r\n\t    const mres = await mreq.json();\r\n\t    await this.setState({institutions: mres});\r\n\t    this.setState({render: true});\r\n\t  }\r\n\r\n\t  searchHandler(event){\r\n\t\tthis.setState({term: event.target.value})\r\n\t  }\r\n\r\n\t  render() {\r\n\t    return (\r\n\t      <div className=\"main-container\">\r\n\t      <div className='text-block'>\r\n\t      \t{this.state.render ?\r\n\t      \t\t<div className='institutions-container'>\r\n\t      \t\t\t<Input\r\n\t\t\t\t\t\tplaceholder=\"Введите название учреждения\"\r\n\t\t\t\t\t\tonChange={this.searchHandler}\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t/>\r\n\t\t      \t\t<div className='institutions-list'>\r\n\t\t\t      \t\t{this.state.institutions.filter(searchingFor(this.state.term)).map((one) => {\r\n\t\t\t      \t\t\treturn(<Link to={{pathname: `institution/${one.id}`}}>\r\n\t\t\t      \t\t\t\t\t<p>{one.short_name}</p>\r\n\t\t\t\t\t\t        \t</Link>)\r\n\t\t\t      \t\t})}\r\n\t\t      \t\t</div>\r\n\t      \t\t</div>\r\n\t\t      \t: <div>\r\n\t\t      \t\t<h1>Узнайте информацию о наличии лекарственных средств в вашем учреждении</h1>\r\n\t\t      \t\t<div className='input-fields'>\r\n\t\t\t\t\t<Input.Search\r\n\t\t\t\t\t\tplaceholder=\"Введите название учреждения\"\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tonSearch={e => this.onSearch(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p>или выберите из списка</p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\tstyle={{ width: 200 }}\r\n\t\t\t\t\t\t\tplaceholder=\"Область\"\r\n\t\t\t\t\t\t\tonChange={value => this.setState({region: value})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.regions.map((one)=>{\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<Option value={one.id}>{one.name}</Option>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t  </Select>\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  \ttype=\"primary\"\r\n\t\t\t\t\t  \tonClick={this.renderInstitutions}\r\n\t\t\t\t\t  >Перейти</Button>\r\n\t\t\t\t\t</div>\r\n\t\t      \t</div>\r\n\t\t      \t</div>\r\n\t      \t}\r\n\t      \t</div>\r\n\t      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport 'antd/lib/input/style/css'; \r\nimport 'antd/lib/button/style/css'; \r\nimport './single.css';\r\n\r\nfunction searchingFor(term){\r\n  return function(x){\r\n    return x.drug.trade_name.toLowerCase().includes(term.toLowerCase()) || !term;\r\n    // return x.title.toLowerCase().includes(term.toLowerCase()) || !term;\r\n  }\r\n}\r\n\r\nclass SingleView extends Component {\r\n  state = {\r\n    institution: [],\r\n    term: ''\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    const mreq = await fetch(`http://46.101.236.211:6969/api/v1/institutions/${this.props.match.params.id}`);\r\n    const mres = await mreq.json();\r\n    this.setState({ \r\n      drugs: mres.available_drugs,\r\n      institution: mres\r\n    });\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    const list = this.state.institution;\r\n    this.state = {\r\n      institution: list,\r\n      term:''\r\n    }\r\n\r\n    this.searchHandler = this.searchHandler.bind(this);\r\n  }\r\n  \r\n  searchHandler(event){\r\n    this.setState({term: event.target.value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='single-view-container'>\r\n      \t<div className='place-info'>\r\n          <div className='left-info'>\r\n            <p>{this.state.institution.full_name}</p>\r\n            <p>{this.state.institution.address}</p>\r\n          </div>\r\n          <div className='mid-info'>\r\n            <p>Область: {this.state.institution.region}</p>\r\n            <p>{this.state.institution.code}</p>\r\n          </div>\r\n          <div className='right-info'>\r\n            <p>Время работы: 7:00 - 12:00</p>\r\n            <Link to={{pathname: `${this.props.match.params.id}/movements`}}>\r\n              <Button type=\"primary\">История движений</Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      \t<div className='place-medicine'>\r\n          <Input.Search\r\n            placeholder=\"Введите название лекарства\"\r\n            size=\"large\"\r\n            onChange={this.searchHandler}\r\n          />\r\n      \t\t<div className='medicine-header'>\r\n      \t\t\t<p>Название</p>\r\n      \t\t\t<p>Ком. название</p>\r\n      \t\t\t<p>Кодификатор</p>\r\n      \t\t\t<p>Дата обновления</p>\r\n      \t\t\t<p>Форма</p>\r\n            <p>Кол-во</p>\r\n      \t\t</div>\r\n      \t\t<div className='medicine-content'>\r\n            {this.state.drugs && this.state.drugs.filter(searchingFor(this.state.term)).map((one)=>{\r\n              return(\r\n                <div className='meidcine-row' id={one.drug.trade_name}>\r\n                  <p className='name'>{one.drug.com_name}</p>\r\n                  <p className='market-name'>{one.drug.trade_name}</p>\r\n                  <p className='code'>{one.drug.code}</p>\r\n                  <p className='date'>{one.date}</p>\r\n                  <p className='form'>{one.drug.storage}</p>\r\n                  <p className='amount'>{one.count}</p>\r\n                </div>\r\n              );\r\n            })}\r\n      \t\t</div>\r\n      \t</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleView;","import React, { Component } from 'react';\r\nimport './navbar.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className='navbar'>\r\n         <div className='navbar-item'>\r\n         <Link \r\n            className=\"nav_el\" to={{\r\n              pathname: `/`\r\n            }}>\r\n            <p className='title'>MED<span>HACK</span></p>\r\n          </Link>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport { Input } from 'antd';\r\nimport 'antd/lib/input/style/css'; \r\nimport './info.css';\r\n\r\nclass InfoView extends Component {\r\n  state = {\r\n    data: [],\r\n    institution: [],\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    const mreq = await fetch(`http://46.101.236.211:6969/api/v1/institutions/${this.props.match.params.id}/movements`);\r\n    const mres = await mreq.json();\r\n    const ireq = await fetch(`http://46.101.236.211:6969/api/v1/institutions/${this.props.match.params.id}`);\r\n    const ires = await ireq.json();\r\n    this.setState({ \r\n      data: mres,\r\n      institution: ires\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='single-view-container'>\r\n      \t<div className='place-info'>\r\n          <div className='left-info'>\r\n            <p>{this.state.institution.short_name}</p>\r\n            <p>{this.state.institution.address}</p>\r\n          </div>\r\n          <div className='mid-info'>\r\n            <p>{this.state.institution.region}</p>\r\n            <p>Факс: 4242</p>\r\n          </div>\r\n          <div className='right-info'>\r\n            <p>Время работы: 7:00 - 12:00</p>\r\n            <p>Доп. инфо:</p>\r\n          </div>\r\n        </div>\r\n      \t<div className='place-medicine'>\r\n      \t\t<div className='medicine-header'>\r\n      \t\t\t<p>Врач</p>\r\n      \t\t\t<p>Ком. название</p>\r\n      \t\t\t<p>Кодификатор</p>\r\n      \t\t\t<p>Дата выдачи</p>\r\n      \t\t\t<p>Форма</p>\r\n            <p>Кол-во</p>\r\n      \t\t</div>\r\n      \t\t<div className='medicine-content'>\r\n            {this.state.data.map((one,index)=>{\r\n              return(\r\n                <div className='meidcine-row' key={one.index}>\r\n                  <p className='name'>{one.doctor}</p>\r\n                  <p className='market-name'>{one.drug}</p>\r\n                  <p className='code'>{one.code}</p>\r\n                  <p className='date'>{one.date}</p>\r\n                  <p className='form'>форма</p>\r\n                  <p className='amount'>{one.count}</p>\r\n                </div>\r\n              );\r\n            })}\r\n      \t\t</div>\r\n      \t</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoView;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Main from './Main/main';\r\nimport SingleView from './SingleView/single';\r\nimport Navbar from './Navbar/navbar';\r\nimport InfoView from './InfoView/info';\r\nconst Router = () => (\r\n\t<BrowserRouter>\r\n\t\t<div className=\"page_container\">\r\n\t\t\t\t<Navbar/>\r\n\t\t\t\t<div className=\"page_content\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/\" component={Main} exact />\r\n\t\t\t\t\t\t<Route path=\"/institution/:id\" component={SingleView} exact />\r\n\t\t\t\t\t\t<Route path=\"/institution/:id/movements\" component={InfoView} exact />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t</BrowserRouter>\r\n);\r\n\r\nexport default Router;","import React, { Component } from 'react';\nimport './App.css';\n// import Main from './components/Main/Main';\nimport Router from \"./components/Router\"\n\n\nexport const link = 'http://46.101.236.211:2222';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router/> \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}